{"version":3,"sources":["components/Card.js","components/CardList.js","components/SearchBox.js","components/Scroll.js","components/ErrorBoundary.js","containers/App.js","reportWebVitals.js","index.js"],"names":["Card","props","className","alt","src","date","id","name","email","CardList","robots","map","user","idx","SearchBox","searchChange","type","placeholder","onChange","Scroll","style","overflowY","border","height","children","ErrorBoundary","state","hasError","error","info","this","setState","React","Component","App","useState","setRobots","searchfield","setSearchfield","Date","onSearchChange","event","target","value","useEffect","fetch","then","response","json","users","filteredRobots","filter","robot","toLowerCase","includes","length","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"sNAoBeA,EAlBF,SAACC,GAEV,OACI,sBAAKC,UAAU,sDAAf,UACI,qBAAKC,IAAI,QAAQC,IAAG,+BAA0BH,EAAMI,MAAhC,OAAuCJ,EAAMK,GAA7C,cACpB,gCACI,6BACKL,EAAMM,OAEX,4BACKN,EAAMO,eCWZC,EApBE,SAAC,GAAsB,IAApBC,EAAmB,EAAnBA,OAAQL,EAAW,EAAXA,KACxB,OACI,8BACKK,EAAOC,KAAI,SAACC,EAAMC,GACX,OACA,cAAC,EAAD,CAEIP,GAAII,EAAOG,GAAKP,GAChBC,KAAMG,EAAOG,GAAKN,KAClBC,MAAOE,EAAOG,GAAKL,MACnBH,KAAMA,GAJDQ,SCOdC,EAdG,SAAC,GAAsB,IAApBC,EAAmB,EAAnBA,aACjB,OACI,qBAAKb,UAAU,MAAf,SACA,uBACIA,UAAY,mCACZc,KAAO,SACPC,YAAc,gBACdC,SAAYH,OCITI,EAXA,SAAClB,GACZ,OACI,qBAAKmB,MAAO,CAACC,UAAW,SACZC,OAAQ,kBACRC,OAAQ,SAFpB,SAIKtB,EAAMuB,Y,4BCgBJC,E,kDApBX,WAAYxB,GAAO,IAAD,8BACd,cAAMA,IACDyB,MAAQ,CACTC,UAAU,GAHA,E,qDAOlB,SAAkBC,EAAOC,GACrBC,KAAKC,SAAS,CAAEJ,UAAU,M,oBAG9B,WACI,OAAIG,KAAKJ,MAAMC,SACJ,2DAEJG,KAAK7B,MAAMuB,a,GAhBEQ,IAAMC,W,MCwDnBC,MAjDf,WAAgB,IAAD,EACiBC,mBAAS,IAD1B,mBACJzB,EADI,KACI0B,EADJ,OAE2BD,mBAAS,IAFpC,mBAEJE,EAFI,KAESC,EAFT,OAGKH,mBAASI,QAAlBlC,EAHI,oBAKLmC,EAAiB,SAACC,GACpBH,EAAeG,EAAMC,OAAOC,QAGhCC,qBAAU,WACNC,MAAM,8CACDC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GAAK,OAAIb,EAAUa,QAC9B,IAGH,IAAMC,EAAiBxC,EAAOyC,QAAO,SAAAC,GACjC,OAAOA,EAAM7C,KAAK8C,cAAcC,SAASjB,EAAYgB,kBAIzD,OAAK3C,EAAO6C,OAUJ,sBAAKrD,UAAU,KAAf,UACI,oBAAIA,UAAU,KAAd,yBACA,cAAC,EAAD,CAAWa,aAAcyB,IACzB,cAAC,EAAD,UACI,cAAC,EAAD,UACI,cAAC,EAAD,CACI9B,OAAQwC,EACR7C,KAAMA,WAftB,sBAAKH,UAAU,KAAf,UACI,oBAAIA,UAAU,KAAd,yBACA,cAAC,EAAD,CAAWa,aAAcyB,IACzB,oBAAItC,UAAU,KAAd,4BCxBDsD,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBZ,MAAK,YAAkD,IAA/Ca,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,O,MCGdO,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,SAM1BX,M","file":"static/js/main.d076c1da.chunk.js","sourcesContent":["import React from 'react';\n\nconst Card = (props) => {\n\n    return(\n        <div className='tc bg-light-green dib br3 pa3 ma2 grow bw2 shadow-5'>\n            <img alt='robot' src={`https://robohash.org/${props.date}${props.id}?200x200`}/>\n            <div>\n                <h2>\n                    {props.name}\n                </h2>\n                <p>\n                    {props.email}\n                </p>\n            </div>\n        </div>\n    )\n}\n\n\nexport default Card;","import React from 'react';\nimport Card from './Card';\n\nconst CardList = ({ robots, date }) => {\n    return (\n        <div>\n            {robots.map((user, idx) => {\n                    return (\n                    <Card \n                        key={idx} \n                        id={robots[idx].id} \n                        name={robots[idx].name} \n                        email={robots[idx].email}\n                        date={date}\n                    />\n                    );\n                }\n            )}\n        </div>\n    );\n}\n\n\nexport default CardList;","import React from 'react'\n\nconst SearchBox = ({ searchChange }) => {\n    return (\n        <div className='pa2'>\n        <input \n            className = 'pa3 ba b--green bg-lightest-blue'\n            type = 'search' \n            placeholder = 'Search robots'\n            onChange = {searchChange}>\n        </input>\n        </div>\n    )\n}\n\n\nexport default SearchBox;","import React from 'react';\n\nconst Scroll = (props) =>{\n    return (\n        <div style={{overflowY: 'scroll', \n                    border: '1px solid black',\n                    height: '800px'\n        }}>\n            {props.children}\n        </div>\n    );\n};\n\nexport default Scroll;","import React from 'react';\n\n\nclass ErrorBoundary extends React.Component{\n    constructor(props){\n        super(props);\n        this.state = {\n            hasError: false,\n        }\n    }\n\n    componentDidCatch(error, info) {\n        this.setState({ hasError: true})\n    }\n\n    render(){\n        if (this.state.hasError){\n            return <h1>Opps. That is not good...</h1>\n        }\n        return this.props.children\n    }\n}\n\n\nexport default ErrorBoundary;\n","import React, { useState, useEffect } from 'react';\nimport CardList from '../components/CardList';\nimport SearchBox from '../components/SearchBox';\n// import { robots } from './robots';\nimport Scroll from '../components/Scroll'\nimport ErrorBoundary from '../components/ErrorBoundary'\nimport './App.css';\n\n\n\nfunction App() {\n    const [robots, setRobots] = useState([])\n    const [searchfield, setSearchfield] = useState('')\n    const [date,] = useState(Date())\n\n    const onSearchChange = (event) => {\n        setSearchfield(event.target.value)\n    }\n\n    useEffect(() => {\n        fetch('https://jsonplaceholder.typicode.com/users')\n            .then(response => response.json())\n            .then(users => setRobots(users));\n    }, [])\n\n\n    const filteredRobots = robots.filter(robot => {\n        return robot.name.toLowerCase().includes(searchfield.toLowerCase())\n\n    })\n\n    if (!robots.length) {\n        return (\n            <div className='tc'>\n                <h1 className='f2'>Robofriends</h1>\n                <SearchBox searchChange={onSearchChange} />\n                <h1 className='f3'>Loading...</h1>\n            </div>\n        )\n    } else {\n        return (\n            <div className='tc'>\n                <h1 className='f1'>Robofriends</h1>\n                <SearchBox searchChange={onSearchChange} />\n                <Scroll>\n                    <ErrorBoundary>\n                        <CardList\n                            robots={filteredRobots}\n                            date={date} />\n                    </ErrorBoundary>\n                </Scroll>\n            </div>\n        );\n    }\n}\n\n\n\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './containers/App';\n// import Card from './Card';\n// import CardList from './CardList';\nimport reportWebVitals from './reportWebVitals';\nimport 'tachyons';\n\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}