{"version":3,"sources":["components/Card.js","components/CardList.js","components/SearchBox.js","components/Scroll.js","components/ErrorBoundary.js","constants.js","containers/App.js","actions.js","reportWebVitals.js","reducers.js","index.js"],"names":["Card","props","className","alt","src","date","id","name","email","CardList","robots","map","user","idx","SearchBox","searchChange","type","placeholder","onChange","Scroll","style","overflowY","border","height","children","ErrorBoundary","state","hasError","error","info","this","setState","React","Component","CHANGE_SEARCH_FIELD","REQUEST_ROBOTS_PENDING","REQUEST_ROBOTS_SUCCESS","REQUEST_ROBOTS_FAILED","App","dispatch","useDispatch","searchField","useSelector","searchRobots","requestRobots","isPending","useState","Date","onSearchChange","event","text","target","value","payload","onRequestRobots","fetch","then","response","json","data","catch","err","useEffect","filteredRobots","filter","robot","toLowerCase","includes","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","initialStateSearch","initialStateRobots","logger","createLogger","rootReducer","combineReducers","action","store","createStore","applyMiddleware","thunkMiddleware","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.3e6636d8.chunk.js","sourcesContent":["import React from 'react';\n\nconst Card = (props) => {\n\n    return(\n        <div className='tc bg-light-green dib br3 pa3 ma2 grow bw2 shadow-5'>\n            <img alt='robot' src={`https://robohash.org/${props.date}${props.id}?200x200`}/>\n            <div>\n                <h2>\n                    {props.name}\n                </h2>\n                <p>\n                    {props.email}\n                </p>\n            </div>\n        </div>\n    )\n}\n\n\nexport default Card;","import React from 'react';\nimport Card from './Card';\n\nconst CardList = ({ robots, date }) => {\n    return (\n        <div>\n            {robots.map((user, idx) => {\n                    return (\n                    <Card \n                        key={idx} \n                        id={robots[idx].id} \n                        name={robots[idx].name} \n                        email={robots[idx].email}\n                        date={date}\n                    />\n                    );\n                }\n            )}\n        </div>\n    );\n}\n\n\nexport default CardList;","import React from 'react'\n\nconst SearchBox = ({ searchChange }) => {\n    return (\n        <div className='pa2'>\n        <input \n            className = 'pa3 ba b--green bg-lightest-blue'\n            type = 'search' \n            placeholder = 'Search robots'\n            onChange = {searchChange}>\n        </input>\n        </div>\n    )\n}\n\n\nexport default SearchBox;","import React from 'react';\n\nconst Scroll = (props) =>{\n    return (\n        <div style={{overflowY: 'scroll', \n                    border: '1px solid black',\n                    height: '800px'\n        }}>\n            {props.children}\n        </div>\n    );\n};\n\nexport default Scroll;","import React from 'react';\n\n\nclass ErrorBoundary extends React.Component{\n    constructor(props){\n        super(props);\n        this.state = {\n            hasError: false,\n        }\n    }\n\n    componentDidCatch(error, info) {\n        this.setState({ hasError: true})\n    }\n\n    render(){\n        if (this.state.hasError){\n            return <h1>Opps. That is not good...</h1>\n        }\n        return this.props.children\n    }\n}\n\n\nexport default ErrorBoundary;\n","export const CHANGE_SEARCH_FIELD = 'CHANGE_SEARCH_FIELD'\n\nexport const REQUEST_ROBOTS_PENDING = 'REQUEST_ROBOTS_PENDING'\nexport const REQUEST_ROBOTS_SUCCESS = 'REQUEST_ROBOTS_SUCCESS'\nexport const REQUEST_ROBOTS_FAILED = 'REQUEST_ROBOTS_FAILED'","import React, { useState, useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux'\nimport CardList from '../components/CardList';\nimport SearchBox from '../components/SearchBox';\nimport Scroll from '../components/Scroll'\nimport ErrorBoundary from '../components/ErrorBoundary'\nimport './App.css';\nimport { setSearchField, requestRobots } from '../actions.js'\n\n\n\n\n\nconst App = () => {\n\n    const dispatch = useDispatch()\n    const { searchField } = useSelector(state => state.searchRobots)\n    const { robots, isPending, error } = useSelector(state => state.requestRobots)\n    const [date,] = useState(Date())\n\n\n\n    const onSearchChange = (event) => {\n        dispatch(setSearchField(event.target.value))\n    }\n\n    const onRequestRobots = () => {\n        dispatch(requestRobots())\n    }\n\n    useEffect(() => {\n        onRequestRobots()\n    }, [])\n\n    const filteredRobots = robots.filter(robot => {\n        return robot.name.toLowerCase().includes(searchField.toLowerCase())\n    })\n\n    if (isPending) {\n        return (\n            <div className='tc'>\n                <h1 className='f2'>Robofriends</h1>\n                <SearchBox searchChange={onSearchChange} />\n                <h1 className='f3'>Loading...</h1>\n            </div>\n        )\n    }\n    else if (!error) {\n        return (\n            <div className='tc'>\n                <h1 className='f1'>Robofriends</h1>\n                <SearchBox searchChange={onSearchChange} />\n                <Scroll>\n                    <ErrorBoundary>\n                        <CardList\n                            robots={filteredRobots}\n                            date={date} />\n                    </ErrorBoundary>\n                </Scroll>\n            </div>\n        );\n    }\n    else {\n        return (\n            <div className='tc'>\n                <h1 className='f2'>Robofriends</h1>\n                <SearchBox searchChange={onSearchChange} />\n                <h1 className='f3'>Error...</h1>\n            </div>\n        )\n    }\n}\n\n\n\n\nexport default App;","import {\n    CHANGE_SEARCH_FIELD,\n    REQUEST_ROBOTS_PENDING,\n    REQUEST_ROBOTS_SUCCESS,\n    REQUEST_ROBOTS_FAILED\n} from './constants.js'\n\n\nexport const setSearchField = (text) => ({\n    type: CHANGE_SEARCH_FIELD,\n    payload: text\n})\n\n\nexport const requestRobots = () => (dispatch) => {\n    dispatch({ type: REQUEST_ROBOTS_PENDING })\n    fetch('https://jsonplaceholder.typicode.com/users')\n        .then(response => response.json())\n        .then(data => dispatch({ type: REQUEST_ROBOTS_SUCCESS, payload: data }))\n        .catch(err => dispatch({ type: REQUEST_ROBOTS_FAILED, payload: err }))\n}","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import {\n    CHANGE_SEARCH_FIELD,\n    REQUEST_ROBOTS_PENDING,\n    REQUEST_ROBOTS_SUCCESS,\n    REQUEST_ROBOTS_FAILED\n} from './constants.js'\n\nconst initialStateSearch = {\n    searchField: ''\n}\nconst initialStateRobots = {\n    isPending: false,\n    robots: [],\n    error: false\n}\n\nexport const searchRobots = (state = initialStateSearch, action = {}) => {\n    switch (action.type) {\n        case CHANGE_SEARCH_FIELD:\n            return { ...state, searchField: action.payload };\n        default:\n            return state;\n    }\n}\n\n\nexport const requestRobots = (state = initialStateRobots, action = {}) => {\n    switch (action.type) {\n        case REQUEST_ROBOTS_PENDING:\n            return { ...state, isPending: true }\n        case REQUEST_ROBOTS_SUCCESS:\n            return { ...state, robots: action.payload, error: false, isPending: false }\n        case REQUEST_ROBOTS_FAILED:\n            return { ...state, robots: [], error: action.payload, isPending: false }\n        default:\n            return state;\n    }\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { createStore, applyMiddleware, combineReducers } from 'redux';\nimport { createLogger } from 'redux-logger';\nimport thunkMiddleware from 'redux-thunk';\nimport './index.css';\nimport App from './containers/App';\nimport reportWebVitals from './reportWebVitals';\nimport { searchRobots, requestRobots } from './reducers';\nimport 'tachyons';\n\n\nconst logger = createLogger();\nconst rootReducer = combineReducers({ searchRobots, requestRobots })\nconst store = createStore(rootReducer, applyMiddleware(thunkMiddleware, logger));\n\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}